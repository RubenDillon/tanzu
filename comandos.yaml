Para conectarse a un cluster vSphere

    ./kubectl-vsphere login --vsphere-username administrator@vsphere.local --server=10.220.2.130 --insecure-skip-tls-verify
    
    o kubectl vsphere login

Para conectarme a una contexto (namespace, cluster TKGs)

    kubectl config use-context shared

Si deseo ver los contextos

    kubectl config get-contexts
    
Si deseo ver que maquinas estan asociadas

    kubectl get virtualmachineclassbindings
    
Si deseo ver los clusters TKGs creados

    kubectl get tanzukubernetesclusters

Si se desea administrar un TKGs 

    ./kubectl-vsphere --server=x.y.z.w --vsphere-username user@vsphere.local --tanzu-kubernetes-cluster-name tkgs-cluster-1 --tanzu-kubernetes-cluster-namespace tkgs-ns --insecure-skip-tls-verify

    /root/bin/kubectl-vsphere login --vsphere-username administrator@vsphere.local --server=10.220.2.130 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name prueba --tanzu-kubernetes-cluster-namespace intranet

Si deseo ver como evoluciona el despliegue de un TKGs

    kubectl get tanzukubernetescluster,virtualmachinesetresourcepolicy,virtualmachineservice,virtualmachine


...........................

Si quiero acceder un cluster que es administrado por TMC y no tengo acceso a vCenter

    tmc login
    
    completar por ejemplo, las siguientes credenciales
    
? API Token ****************************************************************
? Login context name rad-tap
? Select default log level info
? Management Cluster Name ruben-vsphere (nombre del cluster supervisor)
? Provisioner Name intranet (provisionador del cluster supervisor)

        
            El token sale del usuario de TMC
            El Management cluster es el nombre del management cluster en TMC
            El provisionador... es el namespace
            
            
Usar el kubeconfig que se descarga del cluster que se desea administrar y copiarlo como /root/.kube/config


...........................
  
ALIAS para ahorrar tiempo

Estos son mis alias para kubernetes mas comunes
alias k='kubectl'
alias ka='kubectl apply -f'
alias kgp='kubectl get pods --show-labels'
alias kdp='kubectl describe pod'
alias kgn='kubectl get namespaces'

para aquellos que usan Mac y estan acostumbrados al ll de linux... y les da error... :(
alias l='ls -lrt' o tambien ll='ls -alF' (ordenado ascendente)

Otros tipicos alias...
alias kc='k config view --minify | grep name'
alias krh='kubectl run --help | more'
alias ugh='kubectl get --help | more'
alias c='clear'
alias ke='kubectl explain'
alias kf='kubectl create -f'
alias kr='kubectl replace -f'
alias kh='kubectl --help | more'
alias krh='kubectl run --help | more'
alias ll='vi ls -rt | tail -1'
alias kga='k get pod --all-namespaces'
alias kgaa='kubectl get all --show-labels'

Para ver los alias que has creado ... por si en unos dias... los olvidas
    alias
    
...............................

Introduction
The kubectl completion script for Bash can be generated with the command 

kubectl completion bash 

Sourcing the completion script in your shell enables kubectl autocompletion. However, the completion script depends on bash-completion, which means that you have to install this software first (you can test if you have bash-completion already installed by running type _init_completion).

Install bash-completion

bash-completion is provided by many package managers (see here). You can install it with apt-get install bash-completion or yum install bash-completion, etc.

The above commands create /usr/share/bash-completion/bash_completion, which is the main script of bash-completion. Depending on your package manager, you have to manually source this file in your ~/.bashrc file.

To find out, reload your shell and run type _init_completion. If the command succeeds, you're already set, otherwise add the following to your ~/.bashrc file:

source /usr/share/bash-completion/bash_completion
Reload your shell and verify that bash-completion is correctly installed by typing type _init_completion.

Enable kubectl autocompletion
Bash
You now need to ensure that the kubectl completion script gets sourced in all your shell sessions. There are two ways in which you can do this:
echo 'source <(kubectl completion bash)' >>~/.bashrc
or
echo 'alias k=kubectl' >>~/.bashrc
echo 'complete -o default -F __start_kubectl k' >>~/.bashrc

https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/

...................



