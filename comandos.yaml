Para conectarse a un cluster vSphere

    ./kubectl-vsphere login --vsphere-username administrator@vsphere.local --server=10.220.2.130 --insecure-skip-tls-verify
    
    o kubectl vsphere login

Para conectarme a una contexto (namespace, cluster TKGs)

    kubectl config use-context shared

Si deseo ver los contextos

    kubectl config get-contexts
    
Si deseo ver que maquinas estan asociadas

    kubectl get virtualmachineclassbindings
    
Si deseo ver los clusters TKGs creados

    kubectl get tanzukubernetesclusters

Si se desea administrar un TKGs 

    ./kubectl-vsphere --server=x.y.z.w --vsphere-username user@vsphere.local --tanzu-kubernetes-cluster-name tkgs-cluster-1 --tanzu-kubernetes-cluster-namespace tkgs-ns --insecure-skip-tls-verify

    /root/bin/kubectl-vsphere login --vsphere-username administrator@vsphere.local --server=10.220.2.130 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name prueba --tanzu-kubernetes-cluster-namespace intranet

Si deseo ver como evoluciona el despliegue de un TKGs

    kubectl get tanzukubernetescluster,virtualmachinesetresourcepolicy,virtualmachineservice,virtualmachine


...........................

Si quiero acceder un cluster que es administrado por TMC y no tengo acceso a vCenter

    tmc login
    
    completar por ejemplo, las siguientes credenciales
    
? API Token ****************************************************************
? Login context name rad-tap
? Select default log level info
? Management Cluster Name ruben-vsphere (nombre del cluster supervisor)
? Provisioner Name intranet (provisionador del cluster supervisor)

        
            El token sale del usuario de TMC
            El Management cluster es el nombre del management cluster en TMC
            El provisionador... es el namespace
            
            
Usar el kubeconfig que se descarga del cluster que se desea administrar y copiarlo como /root/.kube/config


...........................
  
Helpful aliases to save time
Kubernetes commands can be quite lengthy, so setting up some aliases for running kubectl is very helpful. You will no longer need to spell out the full command over and over again, making your life a lot easier when you want to execute multiple Kubernetes commands in one session.

We have listed aliases for some frequently used commands below. Run these before executing kubectl commands to save yourself some time. Example: You just need to type k instead of typing kubectl:

alias k='kubectl'
alias kc='k config view --minify | grep name'
alias kdp='kubectl describe pod'
alias krh='kubectl run --help | more'
alias ugh='kubectl get --help | more'
alias c='clear'
alias kd='kubectl describe pod'
alias ke='kubectl explain'
alias kf='kubectl create -f'
alias kg='kubectl get pods --show-labels'
alias kr='kubectl replace -f'
alias kh='kubectl --help | more'
alias krh='kubectl run --help | more'
alias ks='kubectl get namespaces'
alias l='ls -lrt'
alias ll='vi ls -rt | tail -1'
alias kga='k get pod --all-namespaces'
alias kgaa='kubectl get all --show-labels'
